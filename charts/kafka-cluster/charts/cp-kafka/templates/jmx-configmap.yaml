{{- if and .Values.prometheus.jmx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "cp-kafka.fullname" . }}-jmx-configmap
  labels:
    app: {{ template "cp-kafka.name" . }}
    chart: {{ template "cp-kafka.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  jmx-kafka-prometheus.yml: |+
    startDelaySeconds: 120
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:{{ .Values.jmx.port }}/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.controller:*
    - kafka.server:*
    - java.lang:*
    - java.nio:*
    - kafka.network:*
    - kafka.log:*
    - kafka.cluster:*
    rules:
    - pattern: kafka.server<type=([^,]+), name=([^,]+)><>(FiveMinuteRate|OneMinuteRate|FifteenMinuteRate|Count)
      name: kafka_server_$1_total_$2_$3    
    - pattern: kafka.server<type=([^,]+), name=([^,]+), topic=([^,]+)><>(FiveMinuteRate|OneMinuteRate|FifteenMinuteRate|Count)
      name: kafka_server_$1_$2_$4
      labels:
        topic: $3 
    - pattern: java.lang<type=MemoryPool, name=(.+)><Usage>used
      name: java_lang_MemoryPool_used__usage_$1
    - pattern : java.lang<type=Memory><(HeapMemoryUsage|NonHeapMemoryUsage)>(used|init|committed|max)
    - pattern : java.lang<type=Threading><>ThreadCount
    - pattern : java.lang<type=ClassLoading><>(UnloadedClassCount|TotalLoadedClassCount)
    - pattern: java.lang<name=(.+), type=(GarbageCollector)><>(\w+)
      name: java_lang_$2_$3_$1
      cache: true
    - pattern: java.lang<name=(.+), type=(.+)><(Usage)>(\w+)
      name: java_lang_$2_$4_$3_$1
      cache: true  
    - pattern : kafka.server<type=(Fetch|Produce)><>(queue-size|byte-rate)
    - pattern : kafka.server<type=(Fetch|Produce|Request)><>(throttle-time)
    - pattern : kafka.server<type=(Request)><>(request_time)
    - pattern : kafka.controller<type=KafkaController, name=(.+)><>Value
      name : kafka_controller_kafkacontroller_$1_value
    - pattern : kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>FiveMinuteRate
      name : kafka_server_KafkaRequestHandlerPool_total_RequestHandlerAvgIdlePercent_FiveMinuteRate
    - pattern : kafka.log<type=Log, name=(.+), topic=(.+), partition=(.+)><>Value
      name: kafka_log_log_$1
      labels:
        topic: "$2"
        partition: "$3"
        topic_partition: "$2_$3"
    - pattern : kafka.network<type=RequestMetrics, name=ResponseSendTimeMs, request=(FetchConsumer|FetchFollower|Produce)><>(Mean|Count)
      name: kafka_network_RequestMetrics_ResponseSendTimeMs_$2
      labels:
        request: "$1"  
    - pattern : kafka.server<type=ReplicaManager, name=(IsrShrinksPerSec|IsrExpandsPerSec)><>FiveMinuteRate
      name: kafka_server_ReplicaManager_total_$1_FiveMinuteRate
    - pattern : kafka.server<type=ReplicaManager, name=(PartitionCount|UnderReplicatedPartitions)><>Value
      name: kafka_server_ReplicaManager_total_$1_Value
    - pattern : kafka.server<type=KafkaServer, name=BrokerState><>Value
      name: kafka_server_KafkaServer_total_BrokerState_Value
    - pattern : kafka.controller<type=ControllerStats, name=UncleanLeaderElectionsPerSec><>Count
    - pattern : kafka.log<type=LogManager,name=OfflineLogDirectory><>Count
    - pattern : kafka.network<type=(RequestMetrics), name=(TotalTimeMs|RequestsPerSec), request=([^,]+).*><>(Mean|FiveMinuteRate)
      name: kafka_network_$1_$2_$4
      labels:
        request: $3
{{- end }}